; REQUIRES: regkeys, spirv-as, dg2-supported, llvm-15-plus

; RUN: spirv-as --target-env spv1.0 -o %t.spv %s

; LLVM with opaque pointers:
; RUN: ocloc compile -spirv_input -file %t.spv -device dg2 -options " -igc_opts 'EnableOpaquePointersBackend=1, ShaderDumpTranslationOnly=1'" 2>&1 | FileCheck %s
; LLVM with typed pointers/default pointer typing:
; RUN: ocloc compile -spirv_input -file %t.spv -device dg2 -options " -igc_opts 'ShaderDumpTranslationOnly=1'" 2>&1 | FileCheck %s

; CHECK-LABEL: spir_kernel void @test

; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfnDv2_fiPU3AS1Dh(<2 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}})
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfnDv3_fiPU3AS1Dh(<3 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}})
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfnDv4_fiPU3AS1Dh(<4 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}})
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfnDv8_fiPU3AS1Dh(<8 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}})
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfnDv16_fiPU3AS1Dh(<16 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}})

; CHECK-LABEL: spir_kernel void @testRTE

; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv2_fiPU3AS1Dhi(<2 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 0)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv3_fiPU3AS1Dhi(<3 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 0)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv4_fiPU3AS1Dhi(<4 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 0)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv8_fiPU3AS1Dhi(<8 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 0)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv16_fiPU3AS1Dhi(<16 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 0)

; CHECK-LABEL: spir_kernel void @testRTZ

; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv2_fiPU3AS1Dhi(<2 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 1)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv3_fiPU3AS1Dhi(<3 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 1)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv4_fiPU3AS1Dhi(<4 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 1)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv8_fiPU3AS1Dhi(<8 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 1)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv16_fiPU3AS1Dhi(<16 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 1)

; CHECK-LABEL: spir_kernel void @testRTP

; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv2_fiPU3AS1Dhi(<2 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 2)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv3_fiPU3AS1Dhi(<3 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 2)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv4_fiPU3AS1Dhi(<4 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 2)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv8_fiPU3AS1Dhi(<8 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 2)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv16_fiPU3AS1Dhi(<16 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 2)

; CHECK-LABEL: spir_kernel void @testRTN

; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv2_fiPU3AS1Dhi(<2 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 3)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv3_fiPU3AS1Dhi(<3 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 3)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv4_fiPU3AS1Dhi(<4 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 3)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv8_fiPU3AS1Dhi(<8 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 3)
; CHECK: call spir_func void @{{[0-9A-z_]+}}vstore_halfn_rDv16_fiPU3AS1Dhi(<16 x float> {{.*}}, i32 0, {{half|ptr}} addrspace(1){{.*}}, i32 3)

               OpCapability Addresses
               OpCapability Kernel
               OpCapability Vector16
               OpCapability Float16Buffer
          %1 = OpExtInstImport "OpenCL.std"
               OpMemoryModel Physical32 OpenCL
               OpEntryPoint Kernel %6 "test"
               OpEntryPoint Kernel %27 "testRTE"
               OpEntryPoint Kernel %35 "testRTZ"
               OpEntryPoint Kernel %43 "testRTP"
               OpEntryPoint Kernel %51 "testRTN"
         %59 = OpString "kernel_arg_type.test.half*,"
         %60 = OpString "kernel_arg_type.testRTE.half*,"
         %61 = OpString "kernel_arg_type.testRTZ.half*,"
         %62 = OpString "kernel_arg_type.testRTP.half*,"
         %63 = OpString "kernel_arg_type.testRTN.half*,"
               OpSource OpenCL_C 200000
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
       %void = OpTypeVoid
       %half = OpTypeFloat 16
%_ptr_CrossWorkgroup_half = OpTypePointer CrossWorkgroup %half
          %5 = OpTypeFunction %void %_ptr_CrossWorkgroup_half
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
    %v8float = OpTypeVector %float 8
   %v16float = OpTypeVector %float 16
         %11 = OpConstantNull %v2float
         %16 = OpConstantNull %v3float
         %19 = OpConstantNull %v4float
         %22 = OpConstantNull %v8float
         %25 = OpConstantNull %v16float
          %6 = OpFunction %void None %5
        %ptr = OpFunctionParameter %_ptr_CrossWorkgroup_half
      %entry = OpLabel
         %14 = OpExtInst %void %1 vstore_halfn %11 %uint_0 %ptr
         %17 = OpExtInst %void %1 vstore_halfn %16 %uint_0 %ptr
         %20 = OpExtInst %void %1 vstore_halfn %19 %uint_0 %ptr
         %23 = OpExtInst %void %1 vstore_halfn %22 %uint_0 %ptr
         %26 = OpExtInst %void %1 vstore_halfn %25 %uint_0 %ptr
               OpReturn
               OpFunctionEnd
         %27 = OpFunction %void None %5
      %ptr_0 = OpFunctionParameter %_ptr_CrossWorkgroup_half
    %entry_0 = OpLabel
         %30 = OpExtInst %void %1 vstore_halfn_r %11 %uint_0 %ptr_0 RTE
         %31 = OpExtInst %void %1 vstore_halfn_r %16 %uint_0 %ptr_0 RTE
         %32 = OpExtInst %void %1 vstore_halfn_r %19 %uint_0 %ptr_0 RTE
         %33 = OpExtInst %void %1 vstore_halfn_r %22 %uint_0 %ptr_0 RTE
         %34 = OpExtInst %void %1 vstore_halfn_r %25 %uint_0 %ptr_0 RTE
               OpReturn
               OpFunctionEnd
         %35 = OpFunction %void None %5
      %ptr_1 = OpFunctionParameter %_ptr_CrossWorkgroup_half
    %entry_1 = OpLabel
         %38 = OpExtInst %void %1 vstore_halfn_r %11 %uint_0 %ptr_1 RTZ
         %39 = OpExtInst %void %1 vstore_halfn_r %16 %uint_0 %ptr_1 RTZ
         %40 = OpExtInst %void %1 vstore_halfn_r %19 %uint_0 %ptr_1 RTZ
         %41 = OpExtInst %void %1 vstore_halfn_r %22 %uint_0 %ptr_1 RTZ
         %42 = OpExtInst %void %1 vstore_halfn_r %25 %uint_0 %ptr_1 RTZ
               OpReturn
               OpFunctionEnd
         %43 = OpFunction %void None %5
      %ptr_2 = OpFunctionParameter %_ptr_CrossWorkgroup_half
    %entry_2 = OpLabel
         %46 = OpExtInst %void %1 vstore_halfn_r %11 %uint_0 %ptr_2 RTP
         %47 = OpExtInst %void %1 vstore_halfn_r %16 %uint_0 %ptr_2 RTP
         %48 = OpExtInst %void %1 vstore_halfn_r %19 %uint_0 %ptr_2 RTP
         %49 = OpExtInst %void %1 vstore_halfn_r %22 %uint_0 %ptr_2 RTP
         %50 = OpExtInst %void %1 vstore_halfn_r %25 %uint_0 %ptr_2 RTP
               OpReturn
               OpFunctionEnd
         %51 = OpFunction %void None %5
      %ptr_3 = OpFunctionParameter %_ptr_CrossWorkgroup_half
    %entry_3 = OpLabel
         %54 = OpExtInst %void %1 vstore_halfn_r %11 %uint_0 %ptr_3 RTN
         %55 = OpExtInst %void %1 vstore_halfn_r %16 %uint_0 %ptr_3 RTN
         %56 = OpExtInst %void %1 vstore_halfn_r %19 %uint_0 %ptr_3 RTN
         %57 = OpExtInst %void %1 vstore_halfn_r %22 %uint_0 %ptr_3 RTN
         %58 = OpExtInst %void %1 vstore_halfn_r %25 %uint_0 %ptr_3 RTN
               OpReturn
               OpFunctionEnd
